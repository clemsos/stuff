{"version":3,"file":"index.e2e08b21.js","sources":["../../vite/modulepreload-polyfill","../../src/components/MintButton.svelte","../../src/components/Header.svelte","../../src/components/Footer.svelte","../../src/lib/constants.js","../../src/lib/api.js","../../src/store.js","../../src/lib/contract.js","../../utils/networks.js","../../src/lib/wallet.js","../../src/components/ConnectWallet.svelte","../../src/components/InfoBubbles.svelte","../../src/components/Message.svelte","../../src/components/Countdown.svelte","../../src/components/Prompt.svelte","../../src/lib/getSingleToken.js","../../src/lib/helpers.js","../../src/lib/mint.js","../../src/lib/changeToken.js","../../src/components/clickOutside.js","../../src/components/Modal.svelte","../../src/components/Tx.svelte","../../src/components/PickShape.svelte","../../src/components/Shape/Attributes.svelte","../../src/lib/twitter.js","../../src/lib/opensea.js","../../src/components/Shape/ShareButtons.svelte","../../src/components/Shape/RefreshButton.svelte","../../src/components/Shape/Generations.svelte","../../src/components/Shape/SwapSlash.svelte","../../src/components/Shape/ChangeTokenButton.svelte","../../src/components/Shape/ShowToken.svelte","../../src/layouts/SingleShape.svelte","../../src/layouts/SingleSlash.svelte","../../src/components/Shape/Loading.svelte","../../src/components/Shape/Thumbnail.svelte","../../src/layouts/MyShapes.svelte","../../src/components/Search.svelte","../../src/layouts/AllShapes.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","<script>\n  async function handleClick() {\n    window.location.hash = `mint`\n  }\n\n  // TODO: fetch from contract\n  // export const availableTomint = 256\n</script>\n\n<button\n  id=\"connect-wallet\"\n  on:click={handleClick}\n  class=\"inline-flex gap-2 text-base shadow-2xl text-black transition-all duration-150 rounded-md p-4 sm:px-8 pointer-events-auto bg-[#F6B855] hover:brightness-110 min-w-[200px] justify-center\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"w-6 h-6 stroke-current fill-transparent\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <path d=\"M3 17l9 4l9 -4l-9 -14z\" />\n    <path d=\"M12 3v18\" />\n  </svg>\n  Mint a token\n</button>\n\n<!-- <p class=\"my-6 opacity-75\">\n    Remaining tokens available to mint : {availableTomint}\n  </p> -->\n","<script>\n  import { onMount } from 'svelte'\n  import MintButton from './MintButton.svelte'\n  // import Countdown from './Countdown.svelte'\n  // import Nav from './Nav.svelte'\n\n  let isLoaded = false\n\n  onMount(() => {\n    setTimeout(() => {\n      isLoaded = true\n    }, 0)\n  })\n</script>\n\n<header class=\"text-center\">\n  <h1\n      style=\"font-size: calc(min(8vw, 100px))\"\n      class=\"font-black uppercase tracking-none drop-shadow-[0_8px_16px_rgba(0,0,0,0.5)] [&>*]:inline-block [&>*]:tracking-[.5em] [&>*]:transition [&>*]:duration-[1.5s] [&>*]:ease-out whitespace-nowrap\"\n    >\n      <span class=\"delay-[1.5s] {isLoaded ? '' : 'opacity-0 translate-y-16'}\">S</span>\n      <span class=\"delay-[1.4s] {isLoaded ? '' : 'opacity-0 -translate-y-24'}\">h</span>\n      <span class=\"delay-[1.3s] {isLoaded ? '' : 'opacity-0 translate-y-20'}\">a</span>\n      <span class=\"delay-[1.2s] {isLoaded ? '' : 'opacity-0 -translate-y-16'}\">p</span>\n      <span class=\"delay-[1.5s] {isLoaded ? '' : 'opacity-0 translate-y-20'}\">e</span>\n      <span class=\"!tracking-normal delay-[1.4s] {isLoaded ? '' : 'opacity-0 translate-y-16'}\">s</span>\n    </h1>\n  <h2\n    class=\"max-w-sm md:max-w-lg mx-auto mt-6 xl:mt-8 sm:text-xl md:text-2xl !leading-relaxed drop-shadow-[0_8px_16px_rgba(0,0,0,0.25)] transition duration-1000 delay-[2.5s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'}\"\n  >\n    A collection of 100% in-chain generative art pieces by <a\n      href=\"https://twitter.com/makio135\"\n      target=\"_blank\"\n      class=\"text-[#f6b855] decoration-dashed underline hover:decoration-solid underline-offset-4\">makio135</a\n    >\n    and\n    <a\n      href=\"https://twitter.com/clemsos\"\n      target=\"_blank\"\n      class=\"text-[#f6b855] decoration-dashed underline hover:decoration-solid underline-offset-4\">clemsos</a\n    >.\n  </h2>\n</header>\n\n<div\n  class=\"grid sm:grid-cols-2 gap-2 sm:gap-4 md:gap-6 xl:gap-8 justify-center max-w-lg mx-auto my-8 xl:my-12 transition duration-1000 delay-[2.5s] {isLoaded\n    ? ''\n    : 'opacity-0 translate-y-4'}\"\n>\n  <MintButton {isLoaded} />\n\n  <a\n    href=\"#gallery\"\n    class=\"bg-white text-gray-900 flex items-center justify-center gap-2 text-base shadow-2xl transition-all duration-150 rounded-md p-4 sm:px-8 hover:bg-gray-200\"\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-6 h-6 stroke-current fill-transparent\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <rect x=\"4\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\" />\n      <rect x=\"14\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\" />\n      <rect x=\"4\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\" />\n      <rect x=\"14\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\" />\n    </svg>\n\n    View gallery</a\n  >\n</div>\n\n<!-- <Countdown date={'1 Nov 2022 12:00:00 GMT'} /> -->\n","<script>\n  const year = new Date().getFullYear()\n</script>\n\n<footer class=\"sm:px-6 md:px-8 py-10 xl:py-12\">\n  <p class=\"max-w mt-2 text-sm text-center text-gray-400\">\n    &copy; <a href=\"mailto:shapes@makio135.io\">shapes@makio135.io</a> - {year}\n  </p>\n</footer>\n","export const DEFAULT_NETWORK = 1\n\nexport const SLASHES_IMAGE_BASE_URL = 'https://raw.githubusercontent.com/MAKIO135/slashes-exports/main'\n\nexport const PROD_API_BASE_URL = 'https://shapes.makio135.io/'\nexport const DEV_API_BASE_URL = 'http://localhost:8080/'\n\nexport const API_BASE_URL = import.meta.env.VITE_USE_LOCALHOST ? DEV_API_BASE_URL : PROD_API_BASE_URL\n\n// TODO: fetch from contract\nexport const SHAPE_NAMES = [\n  { released: true, name: 'Slashes', id: 'SlashesV2', image: './images/slashes.png' },\n  { released: true, name: 'Arcs', id: 'Arcs', image: './images/arcs.png' },\n  { released: true, name: 'Grids', id: 'Grids', image: './images/grids.png' },\n  { released: true, name: 'Stencils', id: 'Stencils', image: './images/collection-stencils.png' },\n]\nexport const DEFAULT_SHAPE = 0\n\n// fetch all shapes by default\nexport const DEFAULT_UI_SHAPE = ''\n\nexport const BLOCK_EXPLORERS = {\n  1: 'https://etherscan.io',\n  5: 'https://goerli.etherscan.io',\n}\n\nexport const SHAPES_PER_PAGE = 12\n","import { API_BASE_URL, SLASHES_IMAGE_BASE_URL } from './constants'\nimport { SHAPES_PER_PAGE, DEFAULT_UI_SHAPE } from '../lib/constants';\nconsole.log(`Server at: ${API_BASE_URL}`)\n\nconst parsePNG = (png) => API_BASE_URL.includes('localhost') ? \n  `${API_BASE_URL}png/${png.split(/[\\\\/]/).pop()}` \n  : \n  png\n\n// adapt images for localhost\nconst parseToken = (token) => ({ ...token, png: parsePNG(token.png) })\n\nexport const fetchShapesByIds = async (ids = []) => {\n  const res = await fetch(`${API_BASE_URL}?ids=${ids.join()}`)\n  const { tokens } = await res.json()\n  tokens\n  return tokens.map(parseToken)\n}\n\nexport const fetchShapes = async (\n  limit = SHAPES_PER_PAGE, \n  offset = 0, \n  shape = DEFAULT_UI_SHAPE\n) => {\n  const res = await fetch(`${API_BASE_URL}?limit=${limit}&offset=${offset}&shape=${shape}`)\n  const { tokens } = await res.json()\n  return tokens.map(parseToken)\n}\n\nexport const fetchCount = async (shape = DEFAULT_UI_SHAPE) => {\n  const res = await fetch(`${API_BASE_URL}count?shape=${shape}`)\n  const { count } = await res.json()\n  return count\n}\n\nexport const fetchContract = async (shape = 'Shapes') => {\n  const res = await fetch(`${API_BASE_URL}contract/${shape}`)\n  return await res.json()\n}\n\nexport const fetchPrices = async () => {\n  const res = await fetch(`${API_BASE_URL}prices`)\n  return await res.json()\n}\n\n// this will fetch the token from the API \n// API will fetch from contract if the token can not be found in db\n// pass force=true to force recreate the thumb\nexport const fetchToken = async (tokenId, force = false) => {\n  const url = `${API_BASE_URL}shapes/${tokenId}${force ? '?force=true' : ''}`\n  const res = await fetch(url)\n  const token = await res.json()\n  return token\n}\n\nexport const getShapesPNG = ({ tokenId, seeds }) => `${API_BASE_URL}/png/${tokenId}-${seeds[seeds.length-1]}.png`\nexport const getShapesSVG = ({ tokenId, seeds }) => `${API_BASE_URL}/svg/${tokenId}-${seeds[seeds.length-1]}.svg`\n\n// slashes stuff\nexport const getSlashesPNG = (tokenId) => `${SLASHES_IMAGE_BASE_URL}/png/${tokenId}.png`\nexport const getSlashesSVG = (tokenId) => `${SLASHES_IMAGE_BASE_URL}/svg/${tokenId}.svg`\n\nexport const fetchSlashes = async () => {\n  const resp = await fetch(`${API_BASE_URL}slashes`)\n  const { slashes } = await resp.json()\n  return slashes\n}\n","import { writable, derived } from 'svelte/store'\nimport { fetchSlashes, fetchShapes, fetchPrices } from './lib/api'\n\n// get all slashes from API\nexport const slashes = writable([])\nfetchSlashes().then((slashesData) => {\n  slashes.set(slashesData.map((data, i) => ({ ...data, tokenId: i + 1 })))\n})\n\n// fetch shapes\nexport const shapes = writable([])\nfetchShapes().then((shapesData) => \n  shapes.set(shapesData)\n)\n\n// error message or info\nexport const message = writable('')\n\n// filter shapes\nexport const searchTerm = writable('')\nexport const filterShapeType = writable('')\n\nconst isShape = (attributes, shapeName) => {\n  return attributes.some(({trait_type, value}) => trait_type.toLowerCase() === 'shape' && value === shapeName)\n}\n\nexport const filteredShapes = derived(\n  [shapes, searchTerm, filterShapeType],\n  ([$shapes, $searchTerm, $filterType]) => {\n    return $shapes.length ? \n      $shapes.filter(({ tokenId, attributes }) => \n        attributes \n        &&\n        `${tokenId}`.includes($searchTerm)\n        &&\n        ( isShape(attributes, $filterType) || $filterType === 'all' || $filterType === '' )\n      )\n      .sort((a, b) => b.tokenId - a.tokenId)\n      :\n      []\n  }\n)\n\n// user data\nexport const myShapes = writable([])\n\nexport const mySlashesIds = writable([])\nexport const mySlashes = derived(\n  [slashes, mySlashesIds],\n  ([$slashes, $mySlashesIds]) => \n    $slashes.filter(({ tokenId }) => \n      $mySlashesIds.includes(tokenId)\n    )\n  )\n\n// show a single token \n// [number tokenId, bool isSlashes]\nexport const shownTokenId = writable([0, false])\n\n// show pick shape type modal\n// [ number tokenId (0 for mint), bool shown]\nexport const pickShape = writable([0, false])\n\n// allow navgation btw existing seeds\nexport const currentSeedPNG = writable('')\n\n// to prevent refresh\nexport const isDoingSthImportant = writable(false)\n\n// mintPrice\nexport const mintPrice = writable({ raw: 250000000000000000, formatted : '0.25' })\nexport const tokenChangePrice = writable({ raw: 10000000000000000, formatted : '0.01' })\nfetchPrices()\n  .then(({priceToMint, priceToUpdate}) => {\n    mintPrice.set(priceToMint.formatted)\n    tokenChangePrice.set(priceToUpdate.formatted)\n  })","import { contracts } from 'svelte-ethers-store'\nimport { message } from '../store'\nimport { \n  BLOCK_EXPLORERS, \n  DEFAULT_NETWORK,\n} from './constants'\nimport {\n  fetchContract\n} from './api'\n\nexport const getContractInfo = async (contractName = 'Shapes', chainId = DEFAULT_NETWORK) => {\n  // make sure we have deployed contract address\n  let manifest\n  try {\n    manifest = await fetchContract(contractName)\n  } catch (error) {\n    console.log(error)\n    message.set(`Could not find contract info for ${contractName}`)\n  }\n  return manifest\n}\n\nexport const fetchTokenURI = async (tokenId) => {\n  console.log('Fetching tokenURI from chain...')\n  const tokenURI = await contracts.shapes.tokenURI(tokenId)\n  const json = JSON.parse(\n    window.atob(\n      tokenURI.replace('data:application/json;base64,', '')\n      , \"base64\"\n    )\n  )\n  return {\n    ...json, tokenId\n  }\n}\n\nexport const getTxUrl = (txHash, network = DEFAULT_NETWORK) => \n  `${BLOCK_EXPLORERS[network]}/tx/${txHash}`\n\nexport const getAddressUrl = (address, network = DEFAULT_NETWORK) => \n  `${BLOCK_EXPLORERS[network]}/address/${address}`\n","export default {\n  31337: 'https://127.0.0.1:8545', // hardhat\n  1: 'https://eth-mainnet.alchemyapi.io/v2/7DckTFOvipKBLyeNEP4B9KcmkSXEl0Kd', // mainnet\n  5: 'https://eth-goerli.g.alchemy.com/v2/OP7Mp0dMGsENBsQ98NSW_9l-KcBPviHY', //goerli\n}","import { Buffer } from 'buffer'\nimport { ethers } from 'ethers'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport Web3Modal from 'web3modal'\nimport { defaultEvmStores, signer } from 'svelte-ethers-store'\n\nwindow.Buffer = Buffer\n\nimport { getContractInfo } from './contract'\nimport rpc from '../../utils/networks'\nimport { message } from '../store'\n\nconst providerOptions = {\n  // cacheProvider: false, // prevent from caching\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      rpc, // required\n    },\n  },\n}\nconst web3Modal = new Web3Modal({\n  network: 'mainnet', // optional\n  cacheProvider: true, // optional\n  theme: 'dark',\n  providerOptions, // required\n})\n\nexport const connectWallet = async () => {\n  try {\n    console.log('Connecting to wallet...')\n    const instance = await web3Modal.connect()\n    const provider = new ethers.providers.Web3Provider(instance)\n\n    // set svelte state\n    await defaultEvmStores.setProvider(provider)\n    \n    // attach Shapes contract\n    const { address, abi } = await getContractInfo()\n    console.log(`SHAPES contract: ${address}`)\n    await defaultEvmStores.attachContract('shapes', address, abi)\n\n    // attach Slashes contract\n    const { address: slashesAddress, abi: slashesAbi } = await getContractInfo('SlashesNFT')\n    console.log(`SLASHES contract: ${slashesAddress}`)\n    await defaultEvmStores.attachContract('slashes', slashesAddress, slashesAbi)\n  } catch (e) {\n    if (e.code == '4001') {\n      message.set(e.message)\n    } else {\n      message.set(\"Couldn't get the wallet connection\")\n    }\n    message.set(\"Couldn't get a wallet connection\")\n    console.log(e)\n  }\n}\n","<script>\n  \n  import { connected, signerAddress, provider } from 'svelte-ethers-store'\n  import { connectWallet } from '../lib/wallet'\n\n  const networkNames = {\n    1 : 'mainnet',\n    5 : 'goerli'\n  }\n  let networkName = ''\n  async function handleClick() {\n    await connectWallet()\n    const { chainId } = await $provider.getNetwork()\n    networkName = networkNames[chainId] || 'unsupported network' \n  }\n</script>\n\n<button\n  id=\"connect-wallet\"\n  on:click={handleClick}\n  disabled={$connected}\n  class=\"inline-flex gap-2 text-base shadow-2xl text-left text-black transition-all duration-150 rounded-md p-4 pointer-events-auto {!$connected\n    ? 'bg-[#F6B855] hover:brightness-110'\n    : 'bg-white'}\"\n>\n  {#if !$connected}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"w-6 h-6 fill-transparent stroke-current ml-2\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path\n        d=\"M17 8v-3a1 1 0 0 0 -1 -1h-10a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1 -1 1h-12a2 2 0 0 1 -2 -2v-12\"\n      />\n      <path d=\"M20 12v4h-4a2 2 0 0 1 0 -4h4\" />\n    </svg>\n    <span class=\"mr-2\">Connect your wallet</span>\n  {:else}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"w-6 h-6 fill-transparent stroke-current mr-1\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path d=\"M4 8v-2a2 2 0 0 1 2 -2h2\" />\n      <path d=\"M4 16v2a2 2 0 0 0 2 2h2\" />\n      <path d=\"M16 4h2a2 2 0 0 1 2 2v2\" />\n      <path d=\"M16 20h2a2 2 0 0 0 2 -2v-2\" />\n      <line x1=\"9\" y1=\"10\" x2=\"9.01\" y2=\"10\" />\n      <line x1=\"15\" y1=\"10\" x2=\"15.01\" y2=\"10\" />\n      <path d=\"M9.5 15a3.5 3.5 0 0 0 5 0\" />\n    </svg>\n    <div class=\"-my-1.5\">\n      <p class=\"leading-tight text-sm md:text-base\">\n        Connected as {`${$signerAddress.slice(0, 6)}…${$signerAddress.slice(-4)}`}\n      </p>\n      <p class=\"text-sm opacity-50 leading-tight\">on {networkName}</p>\n      <!-- TODO: show actual network? -->\n    </div>\n  {/if}\n</button>\n","<script>\n  import { onMount } from 'svelte'\n  import { getAddressUrl, getContractInfo } from '../lib/contract'\n\n  let isLoaded = false\n  let shapesEtherscanURL\n\n  //\n  onMount(async () => {\n    // parse contract address\n    const { address } = await getContractInfo()\n    shapesEtherscanURL = getAddressUrl(address)\n\n    setTimeout(() => {\n      isLoaded = true\n    }, 0)\n  })\n</script>\n\n<section\n  class=\"grid max-w-sm grid-cols-1 md:grid-cols-2 md:auto-rows-fr gap-4 mx-auto mt-16 md:mt-20 xl:mt-24 md:gap-6 md:max-w-full xl:gap-8 xl:grid-cols-3 auto-rows-auto\"\n>\n  <div\n    class=\"p-4 xl:col-auto overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#f6b855]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#f6b855]/25 bg-[#f6b855]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path d=\"M3 17L12 21L21 17L12 3L3 17Z\" />\n          <path d=\"M12 3V21\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Shapes Meta Collection</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          A collection of generative smart contracts allowing to evolve your tokens between multiple generators.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"p-4 xl:col-auto overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3.1s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#2cdae2]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#2cdae2]/25 bg-[#2cdae2]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path\n            d=\"M15 21H6C5.20435 21 4.44129 20.6839 3.87868 20.1213C3.31607 19.5587 3 18.7957 3 18V17H13V19C13 19.5304 13.2107 20.0391 13.5858 20.4142C13.9609 20.7893 14.4696 21 15 21ZM15 21C15.5304 21 16.0391 20.7893 16.4142 20.4142C16.7893 20.0391 17 19.5304 17 19V5C17 4.60444 17.1173 4.21776 17.3371 3.88886C17.5568 3.55996 17.8692 3.30362 18.2346 3.15224C18.6001 3.00087 19.0022 2.96126 19.3902 3.03843C19.7781 3.1156 20.1345 3.30608 20.4142 3.58579C20.6939 3.86549 20.8844 4.22186 20.9616 4.60982C21.0387 4.99778 20.9991 5.39992 20.8478 5.76537C20.6964 6.13082 20.44 6.44318 20.1111 6.66294C19.7822 6.8827 19.3956 7 19 7H17M19 3H8C7.20435 3 6.44129 3.31607 5.87868 3.87868C5.31607 4.44129 5 5.20435 5 6V17\"\n          />\n          <path d=\"M9 7H13\" />\n          <path d=\"M9 11H13\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Custom Solidity contract</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          A set of <a\n            href={shapesEtherscanURL}\n            target=\"_blank\"\n            class=\"underline underline-offset-4 decoration-dashed hover:decoration-solid text-[#2cdae2]\"\n            >custom Solidity contracts</a\n          > to produce entirely on-chain art and advanced NFT dynamics.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"p-4 xl:col-auto overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3.2s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#f04141]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#f04141]/25 bg-[#f04141]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" />\n          <path d=\"M2.5 21h8l-4 -7z\" />\n          <path d=\"M14 3l7 7\" />\n          <path d=\"M14 10l7 -7\" />\n          <path d=\"M14 14h7v7h-7z\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Multiple generators</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          Switch between four generators to mint tokens, curate your shapes and make the collection evolve.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"p-4 overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3.3s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#f04141]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#f04141]/25 bg-[#f04141]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          />\n          <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\" />\n          <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\" />\n          <circle cx=\"12\" cy=\"12\" r=\"1\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Generate again and again</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          After mint, owners can mutate their tokens by hunting for new seeds or even switching to other generators.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"p-4 overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3.4s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#f6b855]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#f6b855]/25 bg-[#f6b855]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <rect x=\"4\" y=\"5\" width=\"16\" height=\"16\" rx=\"2\" />\n          <line x1=\"16\" y1=\"3\" x2=\"16\" y2=\"7\" />\n          <line x1=\"8\" y1=\"3\" x2=\"8\" y2=\"7\" />\n          <line x1=\"4\" y1=\"11\" x2=\"20\" y2=\"11\" />\n          <rect x=\"8\" y=\"15\" width=\"2\" height=\"2\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Contributive Curation</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          Collectors can shape the collection by mutating and regenerating their tokens.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"p-4 overflow-hidden bg-white/15 backdrop-blur-xl transition duration-1000 delay-[3.5s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'} rounded-xl text-[#2cdae2]\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <div class=\"flex gap-4\">\n      <div\n        class=\"flex items-center justify-center flex-none w-10 h-10 border rounded border-[#2cdae2]/25 bg-[#2cdae2]/15\"\n      >\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path\n            d=\"M2.5 20C2.72717 20.3165 3.02797 20.573 3.37642 20.7472C3.72488 20.9214 4.1105 21.0082 4.5 21C4.8895 21.0082 5.27512 20.9214 5.62358 20.7472C5.97203 20.573 6.27283 20.3165 6.5 20C6.72717 19.6835 7.02797 19.4271 7.37642 19.2529C7.72488 19.0787 8.1105 18.9919 8.5 19C8.8895 18.9919 9.27512 19.0787 9.62358 19.2529C9.97203 19.4271 10.2728 19.6835 10.5 20C10.7272 20.3165 11.028 20.573 11.3764 20.7472C11.7249 20.9214 12.1105 21.0082 12.5 21C12.8895 21.0082 13.2751 20.9214 13.6236 20.7472C13.972 20.573 14.2728 20.3165 14.5 20C14.7272 19.6835 15.028 19.4271 15.3764 19.2529C15.7249 19.0787 16.1105 18.9919 16.5 19C16.8895 18.9919 17.2751 19.0787 17.6236 19.2529C17.972 19.4271 18.2728 19.6835 18.5 20C18.7272 20.3165 19.028 20.573 19.3764 20.7472C19.7249 20.9214 20.1105 21.0082 20.5 21C20.8895 21.0082 21.2751 20.9214 21.6236 20.7472C21.972 20.573 22.2728 20.3165 22.5 20\"\n          />\n          <path d=\"M4.5 18L3.5 15H21.5L20.5 18\" />\n          <path d=\"M11.5 12H18.5L11.5 3V12Z\" />\n          <path d=\"M8.5 7L6.5 12\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"md:text-lg font-semibold\">Collection on OpenSea</h3>\n        <p class=\"mt-1 text-sm leading-relaxed text-gray-50\">\n          Manage your tokens on the world's first and largest NFT marketplace. Visit <a\n            href=\"https://opensea.io/collection/shapes2048\"\n            target=\"_blank\"\n            class=\"underline underline-offset-4 decoration-dashed hover:decoration-solid text-[#2cdae2]\"\n            >Shapes on OpenSea</a\n          >.\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n","<script>\n  import { message } from '../store'\n\n  let messageShown\n  message.subscribe((value) => {\n    messageShown = value\n  })\n</script>\n\n<div\n  class=\"flex gap-3 bg-gray-800 text-left p-4 max-w-sm rounded-lg border border-gray-700  text-white items-center transition-all shadow-2xl duration-300 {messageShown\n    ? 'pointer-events-auto'\n    : 'opacity-0 translate-y-4 md:translate-y-0 md:translate-x-8'}\"\n>\n  <svg\n    class=\"w-6 h-6 stroke-current fill-transparent flex-none\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <circle cx=\"12\" cy=\"12\" r=\"9\" />\n    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\n    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\n  </svg>\n\n  <p class=\"text-sm leading-relaxed\">\n    {messageShown}\n  </p>\n</div>\n","<script>\n  import { onMount } from 'svelte'\n\n  let days = 0\n  let hours = 0\n  let seconds = 0\n  let minutes = 0\n  let finished = false\n  let interval\n\n  export let date \n  const countDownDate = new Date(date)\n\n  const pad = (n) => (n < 10 ? '0' + n : n)\n\n  const update = () => {\n    // Get today's date and time\n    const now = new Date().getTime()\n\n    // Find the distance between now and the count down date\n    const distance = (countDownDate.getTime() - now) / 1000\n\n    // parse time\n    days = Math.floor(distance / 24 / 60 / 60)\n    const hoursLeft = Math.floor(distance - days * 86400)\n    hours = Math.floor(hoursLeft / 3600)\n    const minutesLeft = Math.floor(hoursLeft - hours * 3600)\n    minutes = Math.floor(minutesLeft / 60)\n    seconds = Math.floor(distance % 60)\n\n    // If the count down is finished stop it\n    if (seconds < 0) {\n      clearInterval(interval)\n      finished = true\n    }\n  }\n\n  let isLoaded = false\n\n  // Update the count down every 1 second\n  onMount(() => {\n    setTimeout(() => {\n      isLoaded = true\n    }, 0)\n\n    update()\n    interval = setInterval(update, 1000)\n  })\n</script>\n\n{#if !finished}\n  <div\n    class=\"relative my-6 max-w-sm mx-auto p-4 bg-white/15 backdrop-blur-xl rounded-xl tabular-nums transition-all duration-1000 delay-[2.5s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'}\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n\n    <!-- <h3 style=\"font-size: calc(min(4vw, 20px))\" class=\"text-[#F6B855]\"></h3> -->\n    <div\n      class=\"absolute top-0 -translate-y-1/2 shadow-md uppercase tracking-wider text-xs sm:text-sm bg-white rounded-full px-4 py-1 text-gray-600 left-1/2 -translate-x-1/2\"\n    >\n      Upgrade ends in:\n    </div>\n\n    <div class=\"mt-4 sm:px-4 mb-2 flex justify-between text-xs sm:text-base\">\n      <div class=\"flex-1 text-center\">\n        <p class=\"text-3xl sm:text-4xl font-semibold text-[#f6b855]\">{pad(days)}</p>\n        <p>days</p>\n      </div>\n\n      <div class=\"flex-1 text-center\">\n        <p class=\"text-3xl sm:text-4xl font-semibold text-[#f6b855]\">{pad(hours)}</p>\n        <p>hours</p>\n      </div>\n\n      <div class=\"flex-1 text-center\">\n        <p class=\"text-3xl sm:text-4xl font-semibold text-[#f6b855]\">{pad(minutes)}</p>\n        <p>minutes</p>\n      </div>\n\n      <div class=\"flex-1 text-center\">\n        <p class=\"text-3xl sm:text-4xl font-semibold text-[#f6b855]\">{pad(seconds)}</p>\n        <p>seconds</p>\n      </div>\n    </div>\n  </div>\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n  import { connected } from 'svelte-ethers-store'\n  import { connectWallet } from '../lib/wallet'\n  import Countdown from './Countdown.svelte'\n\n  let isLoaded = false\n  \n  export let deadline\n\n  async function handleClick() {\n    await connectWallet()\n  }\n\n  onMount(async () => {\n    \n    setTimeout(() => {\n      isLoaded = true\n    }, 0)\n  })\n</script>\n\n{#if !$connected}\n  <div\n    class=\"border rounded-lg border-[#F6B855]/10 max-w-xl mx-auto xl:my-20 px-8 pt-8 pb-10 bg-[#F6B855]/10 backdrop-blur-xl overflow-hidden relative transition duration-1000 delay-[3s] {isLoaded\n      ? ''\n      : 'opacity-0 translate-y-4'}\"\n  >\n  <Countdown date={deadline} />\n\n  <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n\n\n    <h3 class=\"sm:text-lg md:text-xl mb-4 text-center drop-shadow-[0_8px_16px_rgba(0,0,0,0.25)]\">\n      <span class=\"text-[#F6B855]\">\n        Got some\n        <a\n          class=\"decoration-dashed underline hover:decoration-solid underline-offset-[6px]\"\n          target=\"_blank\"\n          href=\"https://opensea.io/collection/slashes\"\n        >\n          Slashes\n        </a>?\n      </span>\n    </h3>\n    <p class=\"text-gray-300 !leading-relaxed text-center\">\n      You can now swap them for Version 2 with more polygons, and the possibility to generate other shapes in the\n      future.\n      <br class=\"hidden sm:block\" />\n      <a\n        on:click={handleClick}\n        class=\"decoration-dashed underline hover:decoration-solid underline-offset-[6px]\"\n        href=\"#connect-wallet\"\n      >\n        Connect your wallet\n      </a>\n      to start now.\n    </p>\n  </div>\n{/if}\n","import { get } from 'svelte/store';\nimport { shapes, message } from '../store'\nimport { fetchToken } from '../lib/api'\n\nexport default function getSingleToken(tokenId) {\n  return new Promise((resolve, reject) => {\n    const existingShapeIndex = get(shapes)\n      .map(({tokenId: id }) => id)\n      .indexOf(tokenId)\n    if(existingShapeIndex !== -1 ) {\n      resolve(get(shapes)[existingShapeIndex])\n    } else {\n      fetchToken(tokenId)\n        .then(token => {\n          if(!token) {\n            message.set(`Token ${tokenId} not found`)\n            resolve({})\n          }\n          resolve(token)\n        })\n        .catch(err => {\n          reject(err)\n        })\n    }\n  })\n}","export const getTitle = (attributes) => {\n  const shape = (attributes.find(({ trait_type }) => trait_type.toLowerCase() === 'shape') || {}).value\n  const title = shape ? 'Shapes' : 'Slashes'\n  const shapeName = shape || 'SlashesV1'\n  return [title, shapeName]\n}\n\nexport const delay = (ms) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","import { getTxUrl } from './contract'\nimport { fetchToken } from './api'\nimport { delay } from './helpers'\nimport { get } from 'svelte/store'\nimport { shapes, myShapes, isDoingSthImportant } from '../store'\n\n\nexport default async function mint(\n  shapesContract, \n  signer,\n  shapeIndex,\n  callback\n) {\n  isDoingSthImportant.set(true)\n  console.log(shapesContract.address)\n  const recipient = await signer.getAddress()\n\n  const price = await shapesContract.priceToMint()\n  console.log(recipient)\n  const canClaim = await shapesContract.allowList(recipient)\n  const tx = await shapesContract\n    .connect(signer)\n    .mint(\n      recipient, \n      shapeIndex,\n      { value: canClaim == 1 ? 0 : price }\n    )\n\n  const txURL = getTxUrl(tx.hash)\n  callback(txURL)\n\n  const { events } = await tx.wait()\n  const {\n    args: { tokenId },\n  } = events.find(({ event }) => event === 'Transfer')\n  console.log(`Minted tokenId: ${tokenId}`)\n\n  // wait for 5s to fetch image then go to the new shape\n  await delay(3000)\n  console.log('fetch token')\n  \n  // fetch the new token\n  const token = await fetchToken(tokenId)\n  console.log(token)\n\n  // update the shapes\n  shapes.set([...get(shapes), token])\n  myShapes.set([...get(myShapes), token])\n\n  // show congrats message\n  isDoingSthImportant.set(false)\n  window.location.hash = `congrats-${tokenId}`\n}","import { getTxUrl } from './contract'\nimport { fetchToken } from './api'\nimport { get } from 'svelte/store'\nimport { shapes, myShapes, isDoingSthImportant } from '../store'\n\nexport default async function changeToken(\n  shapesContract, \n  signer,\n  tokenId,\n  shapeIndex,\n  callback\n) {\n  isDoingSthImportant.set(true)\n\n  const price = await shapesContract.priceToUpdate()\n  const tx = await shapesContract.connect(signer).changeToken(\n    tokenId, \n    shapeIndex, \n    { value: price }\n  )\n\n  const txURL = getTxUrl(tx.hash)\n  console.log(txURL)\n  callback(txURL)\n\n  const { events } = await tx.wait()\n  const { args } = events.find(({ event }) => event === 'TokenChanged')\n  console.log(`TokenChanged`, args)\n\n  // notify the server to rebuild this\n  const token = await fetchToken(tokenId, true)\n\n  // update the shapes\n  shapes.set(\n    get(shapes).map(d => d.tokenId === tokenId ? token : d)\n  )\n  myShapes.set(\n    get(myShapes).map(d => d.tokenId === tokenId ? token : d)\n  )\n\n  isDoingSthImportant.set(false)\n  return args\n}","/** Dispatch event on click outside of node */\nexport function clickOutside(node) {\n  const handleClick = (event) => {\n    if (node && !node.contains(event.target) && !event.defaultPrevented) {\n      node.dispatchEvent(new CustomEvent('click-outside', node))\n    }\n  }\n\n  document.addEventListener('click', handleClick, true)\n\n  return {\n    destroy() {\n      document.removeEventListener('click', handleClick, true)\n    },\n  }\n}\n","<script>\n  import { clickOutside } from './clickOutside.js'\n  import { isDoingSthImportant, shownTokenId, pickShape, currentSeedPNG } from '../store'\n\n  function handleKeydown(e) {\n    if (e.key === 'Escape') {\n      close()\n    }\n  }\n\n  function close() {\n    if ($isDoingSthImportant) return\n    // reset state\n    shownTokenId.set([0, false])\n    pickShape.set([0, false])\n    history.pushState('', document.title, window.location.pathname)\n    currentSeedPNG.set('')\n  }\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div class=\"inset-0 bg-black/80 z-20 fixed transition-colors duration-500 backdrop-blur-lg\" on:click={close} />\n\n<div class=\"relative z-40 group h-fit\" use:clickOutside on:click-outside={close}>\n  <div class=\"absolute w-full h-full placeholder\" />\n  <div\n    class=\"bg-gray-900 border border-white/10 text-gray-50 max-w-[calc(100vw-32px)] no-scrollbar transition-none overscroll-contain overflow-auto lg:overflow-hidden fixed !top-1/2 !left-1/2 !w-[calc(60vh+400px)] h-[90vh] -translate-x-1/2 -translate-y-1/2 p-6 rounded-2xl\"\n  >\n    <div\n      class=\"absolute z-30 items-center gap-2 p-2 transition rounded-lg cursor-pointer right-4 top-2 text-white/40 hover:bg-white/5 hidden md:flex\"\n      on:click|stopPropagation={close}\n    >\n      Close\n      <kbd class=\"px-1 py-0.5 font-sans text-xs rounded bg-white/10\">esc</kbd>\n    </div>\n    <slot />\n  </div>\n</div>\n","<script>\n  export let text\n  export let txURL\n</script>\n<p>\n   {text} (<a\n    class=\"cursor-pointer text-[#f6b855] underline decoration-dashed underline-offset-4 hover:decoration-solid\"\n    href={txURL}\n    target=\"_blank\">see transaction</a\n  >).\n</p>","<script>\n  import { connected, signer } from 'svelte-ethers-store'\n  import { pickShape, tokenChangePrice, mintPrice } from '../store.js'\n  import getSingleToken from '../lib/getSingleToken'\n  import { SHAPE_NAMES as availableShapes } from '../lib/constants'\n  import { getTitle } from '../lib/helpers'\n  \n  import mint from '../lib/mint.js'\n  import changeToken from '../lib/changeToken.js'\n  import Modal from './Modal.svelte'\n  import ConnectWallet from './ConnectWallet.svelte'\n  import Tx from './Tx.svelte'\n\n  const [tokenId] = $pickShape\n  export let shapesContract\n\n  console.log(shapesContract)\n  const isMint = tokenId === 0\n\n  let png\n  function handleImageLoadError() {\n    png = './images/rendering_png.png'\n  }\n\n  let txURL\n  let minting = false\n  let changingToken = true\n\n  async function handleClick(shapeIndex) {\n    const shapeName = availableShapes[shapeIndex].name\n    console.log({ isMint, shapeIndex, shapeName })\n    if (isMint) {\n      minting = true\n      changingToken = false\n      await mint(shapesContract, $signer, shapeIndex, (data) => {\n        txURL = data\n      })\n      minting = false\n    } else {\n      await changeToken(shapesContract, $signer, tokenId, shapeIndex, (data) => {\n        txURL = data\n      })\n      changingToken = false\n    }\n  }\n</script>\n\n<Modal>\n  <div class=\"-m-6 p-6 max-h-[calc(100%+3rem)] overflow-auto no-scrollbar overscroll-contain\">\n    <!-- header -->\n    {#if isMint}\n      <h1 class=\"text-center mb-8 mt-4 text-3xl font-normal\">Mint a Shape</h1>\n      <p class=\"leading-relaxed text-center text-lg text-gray-400 mt-8\">\n        Pick the Shape you wish to mint.\n        <br />\n        <strong class=\"text-[#f6b855] font-normal\">\n          Price: {$mintPrice || '0.25' } ETH\n        </strong>\n      </p>\n    {:else}\n      {#await getSingleToken(tokenId)}\n        loading token...\n      {:then { png, tokenId, attributes }}\n        <h1 class=\"text-center mb-8 mt-4 text-3xl font-normal\">{getTitle(attributes)[0]} #{tokenId}\n          <br>\n          <small class=\"text-gray-400\">{getTitle(attributes)[1]}</small>\n        </h1>\n\n\n        <div class=\"relative z-20 bg-gray-800 aspect-2/3 mx-auto max-w-[120px] rounded-lg\">\n          <img\n            src={png}\n            class=\"object-cover w-full h-full rounded-lg\"\n            alt=\"Shapes #{tokenId}\"\n            on:error={handleImageLoadError}\n          />\n        </div>\n        <p class=\"leading-relaxed text-center text-lg text-gray-400 mt-8\">\n          You can change your token to any series you want.<br />This will generate a new unique artwork.\n          <strong class=\"text-[#f6b855] font-normal\">\n            A {$tokenChangePrice || '0.01' } ETH fee will apply\n          </strong>\n          \n        </p>\n      {:catch}\n        An error occured while fetching the token...\n      {/await}\n    {/if}\n\n    <div class=\"flex justify-center mb-8 mt-4 \">\n      <ConnectWallet />\n    </div>\n\n    <!-- tx info -->\n    \n    {#if txURL}\n      <p class=\"leading-relaxed text-center text-gray-400 mt-8\">\n        {#if minting}\n          <Tx text=\"Minting your token...\" {txURL} />\n        {/if}\n        {#if changingToken}\n          <Tx text=\"We are re-generating your token...\" {txURL} />\n        {/if}\n        <br/>  \n        <span class=\"pt-4 leading-relaxed text-gray-400\">\n          Your token will be visible\n          <a href=\"#congrats-{tokenId}\" class=\"cursor-pointer text-[#f6b855] decoration-dashed underline hover:decoration-solid underline-offset-4\">\n            here</a>.     \n        </span>\n        {#if changingToken}\n        <br>\n        <span class=\"pt-4 p-10 text-center leading-relaxed text-gray-400\">\n          On <a \n            href={`https://opensea.com/assets/ethereum/0x1FF7e338d5E582138C46044dc238543Ce555C963/${tokenId}/`}\n            target=\"_blank\"\n            class=\"text-[#f6b855] cursor-pointer decoration-dashed underline hover:decoration-solid underline-offset-4\"\n            >\n            Opensea</a>, click <em>Refresh metadata</em> to reflect the changes.     \n        </span>\n        {/if}\n      </p>\n    {/if}\n\n    <div class=\"grid md:grid-cols-2 gap-4 mt-8\">\n      {#each availableShapes as { name, image, released }, i}\n        <div class=\"relative overflow-hidden rounded-lg flex-1 bg-gray-800 px-8 sm:px-16 py-12 text-center\">\n          <div class=\"absolute inset-0 opacity-60\">\n            <img src={image} alt={name} class=\"object-cover w-full h-full\" />\n            <div class=\"bg-gradient-radial from-transparent to-gray-800 inset-0 absolute h-[200%] -translate-y-[50%]\" />\n          </div>\n          <div class=\"relative\">\n            {#if released}\n              <h3 class=\"text-xl sm:text-2xl lg:text-3xl uppercase tracking-[.625em] sm:tracking-[.75em] font-bold\">\n                {name}\n              </h3>\n              <button\n                class=\"bg-[#f6b855] text-black p-3 w-full max-w-xs mx-auto rounded-lg mt-8 flex gap-2 justify-center duration-150\n                {$connected ? 'hover:bg-[#ffc75c] transition-colors ' : ''}\"\n                on:click|stopPropagation={() => handleClick(i)}\n                disabled={!$connected}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"h-6 w-6 stroke-current fill-transparent\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  {#if isMint}\n                    <path d=\"M3 17l9 4l9 -4l-9 -14z\" />\n                    <path d=\"M12 3v18\" />\n                  {:else}\n                    <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\" />\n                    <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\" />\n                    <circle cx=\"12\" cy=\"12\" r=\"1\" />\n                  {/if}\n                </svg>\n\n                {#if isMint}\n                  Mint {name}\n                {:else}\n                  <span class=\"sm:inline hidden\">Change to {name}</span>\n                  <span class=\"inline sm:hidden\">Change</span>\n                {/if}\n              </button>\n            {:else}\n              <p class=\"text-xl text-gray-400\">Coming soon…</p>\n              <div\n                class=\"bg-gray-700 text-black p-3 w-full rounded-lg mt-8 flex gap-2 justify-center transition-colors duration-150\"\n              >\n                &nbsp;\n              </div>\n            {/if}\n          </div>\n        </div>\n      {/each}\n    </div>\n  </div>\n</Modal>\n","<script>\n  export let attributes\n\n  const traits = {\n    filter: 'Filter',\n    'Shape StrokeWidth': 'Shape Stroke-Width',\n    tokenId: 'Token ID',\n    paletteID: 'Palette ID',\n    noiseScale: 'Noise Scale',\n    maxSw: 'Max Stroke-Width',\n    nbDashes: 'Number of Dashes',\n    minR: 'Min Radius',\n    maxR: 'Max Radius',\n    countChanges: 'Generations',\n    shape: 'Shape',\n  }\n\n  const icons = {\n    default: `<rect x=\"4\" y=\"8\" width=\"4\" height=\"4\" /> <line x1=\"6\" y1=\"4\" x2=\"6\" y2=\"8\" /> <line x1=\"6\" y1=\"12\" x2=\"6\" y2=\"20\" /> <rect x=\"10\" y=\"14\" width=\"4\" height=\"4\" /> <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"14\" /> <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"20\" /> <rect x=\"16\" y=\"5\" width=\"4\" height=\"4\" /> <line x1=\"18\" y1=\"4\" x2=\"18\" y2=\"5\" /> <line x1=\"18\" y1=\"9\" x2=\"18\" y2=\"20\" />`,\n    'Palette ID': `<path d=\"M12 21a9 9 0 1 1 0 -18a9 8 0 0 1 9 8a4.5 4 0 0 1 -4.5 4h-2.5a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25\" /> <circle cx=\"7.5\" cy=\"10.5\" r=\".5\" /> <circle cx=\"12\" cy=\"7.5\" r=\".5\" /> <circle cx=\"16.5\" cy=\"10.5\" r=\".5\" />`,\n    filter: `<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path> <polyline points=\"6 21 21 6 18 3 3 18 6 21\"></polyline> <line x1=\"15\" y1=\"6\" x2=\"18\" y2=\"9\"></line> <path d=\"M9 3a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\"></path> <path d=\"M19 13a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\"></path>`,\n    'Background Opacity': `<rect x=\"8\" y=\"8\" width=\"12\" height=\"12\" rx=\"2\" /> <path d=\"M8 14.5l6.492 -6.492\" /> <path d=\"M13.496 20.004l6.504 -6.504l-6.504 6.504z\" /> <path d=\"M8.586 19.414l10.827 -10.827\" /> <path d=\"M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2\" />`,\n    'Gradients / 1000': `<path d=\"M12 4v16\" /> <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" /> <path d=\"M12 13l7.5 -7.5\" /> <path d=\"M12 18l8 -8\" /> <path d=\"M15 20l5 -5\" /> <path d=\"M12 8l4 -4\" />`,\n    'X Direction Force': `<path d=\"M12 9v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-3v-6h3z\" /> <path d=\"M3 9v6\" /> <path d=\"M6 9v6\" />`,\n    'Y Direction Force': `<path d=\"M9 12h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v3h-6v-3z\" /> <path d=\"M9 21h6\" /> <path d=\"M9 18h6\" />`,\n    'Wider Shapes / 1000': `<path d=\"M10 12h-7l3 -3m0 6l-3 -3\" /> <path d=\"M14 12h7l-3 -3m0 6l3 -3\" /> <path d=\"M3 6v-3h18v3\" /> <path d=\"M3 18v3h18v-3\" />`,\n    'Complexity Level': `<circle cx=\"5\" cy=\"5\" r=\"2\" /> <circle cx=\"19\" cy=\"19\" r=\"2\" /> <circle cx=\"19\" cy=\"5\" r=\"2\" /> <circle cx=\"5\" cy=\"19\" r=\"2\" /> <path d=\"M6.5 17.5l11 -11m-12.5 .5v10m14 -10v10\" />`,\n    'Shape Type': `<circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" /> <path d=\"M2.5 21h8l-4 -7z\" /> <path d=\"M14 3l7 7\" /> <path d=\"M14 10l7 -7\" /> <path d=\"M14 14h7v7h-7z\" />`,\n    'Shape StrokeWidth': `<path d=\"M3 21v-4a4 4 0 1 1 4 4h-4\" /> <path d=\"M21 3a16 16 0 0 0 -12.8 10.2\" /> <path d=\"M21 3a16 16 0 0 1 -10.2 12.8\" /> <path d=\"M10.6 9a9 9 0 0 1 4.4 4.4\" />`,\n    'Shape Filled': `<path d=\"M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z\" /> <path d=\"M6 14h12\" /> <path d=\"M7.305 17.695l3.695 -3.695\" /> <path d=\"M10.26 19.74l5.74 -5.74l-5.74 5.74z\" />`,\n    Scales: `<path d=\"M5 4h14a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1h-7a1 1 0 0 0 -1 1v7a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1\"></path> <line x1=\"4\" y1=\"8\" x2=\"6\" y2=\"8\"></line> <line x1=\"4\" y1=\"12\" x2=\"7\" y2=\"12\"></line> <line x1=\"4\" y1=\"16\" x2=\"6\" y2=\"16\"></line> <line x1=\"8\" y1=\"4\" x2=\"8\" y2=\"6\"></line> <polyline points=\"12 4 12 7 \"></polyline> <polyline points=\"16 4 16 6 \"></polyline>`,\n    tokenId: `<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path> <line x1=\"5\" y1=\"9\" x2=\"19\" y2=\"9\"></line> <line x1=\"5\" y1=\"15\" x2=\"19\" y2=\"15\"></line> <line x1=\"11\" y1=\"4\" x2=\"7\" y2=\"20\"></line> <line x1=\"17\" y1=\"4\" x2=\"13\" y2=\"20\"></line>`,\n    paletteID: `<path d=\"M12 21a9 9 0 1 1 0 -18a9 8 0 0 1 9 8a4.5 4 0 0 1 -4.5 4h-2.5a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25\" /> <circle cx=\"7.5\" cy=\"10.5\" r=\".5\" /> <circle cx=\"12\" cy=\"7.5\" r=\".5\" /> <circle cx=\"16.5\" cy=\"10.5\" r=\".5\" />`,\n    noiseScale: ``,\n    maxSw: ``,\n    nbDashes: `<path d=\"M8.56 3.69a9 9 0 0 0 -2.92 1.95\"></path> <path d=\"M3.69 8.56a9 9 0 0 0 -.69 3.44\"></path> <path d=\"M3.69 15.44a9 9 0 0 0 1.95 2.92\"></path> <path d=\"M8.56 20.31a9 9 0 0 0 3.44 .69\"></path> <path d=\"M15.44 20.31a9 9 0 0 0 2.92 -1.95\"></path> <path d=\"M20.31 15.44a9 9 0 0 0 .69 -3.44\"></path> <path d=\"M20.31 8.56a9 9 0 0 0 -1.95 -2.92\"></path> <path d=\"M15.44 3.69a9 9 0 0 0 -3.44 -.69\"></path>`,\n    minR: ``,\n    maxR: ``,\n    shape: `<circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\"></circle> <path d=\"M2.5 21h8l-4 -7z\"></path> <path d=\"M14 3l7 7\"></path> <path d=\"M14 10l7 -7\"></path> <path d=\"M14 14h7v7h-7z\"></path>`,\n    countChanges: `<path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\"></path> <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\"></path> <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>`,\n  }\n</script>\n\n<div class=\"space-y-6 text-sm\">\n  <p class=\"text-lg\">Artwork traits</p>\n\n  {#each attributes as { trait_type, value }}\n    <div class=\"flex justify-between\">\n      <div class=\"flex items-center gap-4\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"w-6 h-6 stroke-current fill-transparent\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          {@html icons[trait_type] || icons.default}\n        </svg>\n        <span>{traits[trait_type] || trait_type}</span>\n      </div>\n      <span class=\"opacity-60 capitalize\">{value}</span>\n    </div>\n  {/each}\n</div>\n","export default (tokenId) => {\n  const baseURL = `https://makio135.com/shapes`\n  const text = `Shapes ${tokenId} by @makio135 and @clemsos`\n  const hashtags = 'shapes2048,slashes,generative,svg,onchain,nft,solidity'\n  return `https://twitter.com/intent/tweet?text=${encodeURI(text)}%0a&hashtags=${encodeURI(hashtags)}&url=${encodeURI(\n    baseURL\n  )}${tokenId ? '%23' + tokenId : ''}%0a`\n}\n","import { getContractInfo } from '../lib/contract'\nimport { DEFAULT_NETWORK } from '../lib/constants'\n\nexport default async (tokenId) => {\n  const { address } = await getContractInfo()\n  return DEFAULT_NETWORK === 5 ? \n    `https://testnets.opensea.io/assets/goerli/${address}/${tokenId}`\n  :\n    `https://opensea.com/assets/ethereum/${address}/${tokenId}/`\n}","<script>\n  import getTwitterUrl from '../../lib/twitter'\n  import getOpenseaUrl from '../../lib/opensea'\nimport { onMount } from 'svelte';\n\n  export let tokenId\n  export let svg\n  export let png\n\n  let openseaURL\n  onMount( async() => {\n    openseaURL = await getOpenseaUrl(tokenId)\n  })\n</script>\n\n<div class=\"space-y-4\">\n  <a\n    href={getTwitterUrl(tokenId)}\n    target=\"_blank\"\n    class=\"relative bg-[#1b90ee] w-full text-center p-2 flex items-center justify-center gap-2 rounded-lg hover:bg-[#209dff] transition-colors duration-150\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <svg\n      class=\"w-6 h-6 stroke-current fill-transparent\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path\n        d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\"\n      />\n    </svg>\n\n    Share on Twitter\n  </a>\n\n  <a\n    href={openseaURL}\n    target=\"_blank\"\n    class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition-colors duration-150 rounded-lg bg-white/15 hover:bg-white/20\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <svg\n      class=\"w-6 h-6 stroke-current fill-transparent\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path\n        d=\"M2.5 20C2.72717 20.3165 3.02797 20.573 3.37642 20.7472C3.72488 20.9214 4.1105 21.0082 4.5 21C4.8895 21.0082 5.27512 20.9214 5.62358 20.7472C5.97203 20.573 6.27283 20.3165 6.5 20C6.72717 19.6835 7.02797 19.4271 7.37642 19.2529C7.72488 19.0787 8.1105 18.9919 8.5 19C8.8895 18.9919 9.27512 19.0787 9.62358 19.2529C9.97203 19.4271 10.2728 19.6835 10.5 20C10.7272 20.3165 11.028 20.573 11.3764 20.7472C11.7249 20.9214 12.1105 21.0082 12.5 21C12.8895 21.0082 13.2751 20.9214 13.6236 20.7472C13.972 20.573 14.2728 20.3165 14.5 20C14.7272 19.6835 15.028 19.4271 15.3764 19.2529C15.7249 19.0787 16.1105 18.9919 16.5 19C16.8895 18.9919 17.2751 19.0787 17.6236 19.2529C17.972 19.4271 18.2728 19.6835 18.5 20C18.7272 20.3165 19.028 20.573 19.3764 20.7472C19.7249 20.9214 20.1105 21.0082 20.5 21C20.8895 21.0082 21.2751 20.9214 21.6236 20.7472C21.972 20.573 22.2728 20.3165 22.5 20\"\n      />\n      <path d=\"M4.5 18L3.5 15H21.5L20.5 18\" />\n      <path d=\"M11.5 12H18.5L11.5 3V12Z\" />\n      <path d=\"M8.5 7L6.5 12\" />\n    </svg>\n    View on OpenSea\n  </a>\n\n  <!-- TODO: href -->\n  <!-- <a\n    href=\"#\"\n    class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition-colors duration-150 rounded-lg bg-white/15 hover:bg-white/20\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n    <svg\n      class=\"w-6 h-6 stroke-current fill-transparent\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M4 8v-2a2 2 0 0 1 2 -2h2\" />\n      <path d=\"M4 16v2a2 2 0 0 0 2 2h2\" />\n      <path d=\"M16 4h2a2 2 0 0 1 2 2v2\" />\n      <path d=\"M16 20h2a2 2 0 0 0 2 -2v-2\" />\n    </svg>\n    Open in full screen\n  </a> -->\n\n  <div class=\"flex gap-4\">\n    <a\n      href={`${png}?realPNG=1`}\n      target=\"_blank\"\n      class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition-colors duration-150 rounded-lg bg-white/15 hover:bg-white/20\"\n    >\n      <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n      <svg\n        class=\"w-6 h-6 stroke-current fill-transparent\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n        <path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\" />\n        <polyline points=\"7 11 12 16 17 11\" />\n        <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"16\" />\n      </svg>\n      PNG\n    </a>\n\n    <a\n      href={svg}\n      target=\"_blank\"\n      class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition-colors duration-150 rounded-lg bg-white/15 hover:bg-white/20\"\n    >\n      <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n      <svg\n        class=\"w-6 h-6 stroke-current fill-transparent\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n        <path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\" />\n        <polyline points=\"7 11 12 16 17 11\" />\n        <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"16\" />\n      </svg>\n      SVG\n    </a>\n  </div>\n</div>\n","<script>\n  import { fetchToken } from '../../lib/api'\n\n  export let tokenId\n\n  async function handleClick() {\n    fetchToken(tokenId, true)\n    alert(`Fetching image and metadata for token ${tokenId}. Please wait and refresh to see the result…`)\n  }\n</script>\n\n<div class=\"mt-4\">\n  <button\n    on:click|preventDefault={handleClick}\n    class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition-colors duration-150 rounded-lg bg-white/15 hover:bg-white/20\"\n  >\n    <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n\n    <svg\n      class=\"w-6 h-6 stroke-current fill-transparent\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path d=\"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\" />\n      <path d=\"M20 4v5h-5\" />\n    </svg>\n\n    Refresh token\n  </button>\n</div>\n","<script>\n  import { API_BASE_URL } from '../../lib/constants'\n  import { currentSeedPNG } from '../../store'\n  import { signer, contracts } from 'svelte-ethers-store'\n  import { getTxUrl } from '../../lib/contract'\n  import { fetchToken } from '../../lib/api'\n\n  export let seeds\n  export let tokenId\n  export let changeAllowed = false\n\n  const reorderedSeeds = Object.assign([], seeds).reverse()\n\n  let disabled = true\n  let initialSelected = 0\n  let selected = 0\n  let historical\n\n  let selectSeedTxId\n  async function handleClick(i, seed) {\n    selected = i\n    disabled = i === initialSelected\n    historical = seed\n    \n    // replace shown image with the past png\n    const png = `${API_BASE_URL}png/${tokenId}-${seed}.png`\n    // const svg = `${API_BASE_URL}png/${tokenId}-${seed}.svg`\n    currentSeedPNG.set(png)\n  }\n\n  async function refreshToken() {\n    fetchToken(tokenId, true)\n    alert(`Fetching image and metadata for token ${tokenId}. Please wait and refresh to see the result…`)\n  }\n\n  async function handleConfirm() {\n    if (disabled) return\n\n    confirm('Are you sure you want to revert back?')\n    \n    // here goes contract call..\n    ;({ hash : selectSeedTxId } = await $contracts.shapes.connect($signer).selectSeed(tokenId, historical))\n  }\n</script>\n\n<div class=\"text-sm -mb-4\">\n  <div class=\"space-y-1\">\n    <p class=\"text-lg\">Generations</p>\n\n    <p class=\"text-xs leading-relaxed text-gray-400\">Click to preview older versions of this token.</p>\n  </div>\n\n  <div class=\"relative\">\n    <div class=\"flex flex-row-reverse gap-3 items-center justify-start overflow-auto no-scrollbar px-[108px] py-6\">\n      {#each reorderedSeeds as { historical }, i}\n        <div\n          on:click={() => handleClick(i, historical)}\n          class=\"p-2 rounded-lg bg-white/15 cursor-pointer w-10 flex-none flex items-center justify-center relative h-12 after:content-[''] after:absolute after:w-3 after:h-0.5 after:bg-gray-700 after:-left-3 last:after:content-[] border-t border-white/15\n        {// is current seed\n          i === selected ? 'bg-white/50' : 'hover:bg-white/20'} \n        \"\n        >\n          {seeds.length - i}\n        </div>\n      {/each}\n    </div>\n\n    <div class=\"absolute top-0 h-full w-20 bg-gradient-to-r from-gray-900 pointer-events-none\" />\n    <div class=\"absolute top-0 right-0 h-full w-20 bg-gradient-to-l from-gray-900 pointer-events-none\" />\n  </div>\n\n  {#if changeAllowed}\n    <div\n      class=\"relative flex items-center justify-center w-full gap-2 p-2 text-center transition duration-150 rounded-lg bg-[#f6b855] text-gray-800 {disabled\n        ? 'opacity-30 grayscale'\n        : 'cursor-pointer hover:brightness-110'}\"\n      on:click={() => handleConfirm()}\n    >\n      <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20 text-base\" />\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"w-6 h-6 fill-transparent stroke-current\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M9 13l-4 -4l4 -4m-4 4h11a4 4 0 0 1 0 8h-1\" />\n      </svg>\n\n      Revert to this version\n    </div>\n    {#if selectSeedTxId}\n      <p class=\"pt-4 leading-relaxed text-gray-400\">\n        Your <a class=\"text-[#f6b855] decoration-dashed underline hover:decoration-solid underline-offset-4\" href=\"{getTxUrl(selectSeedTxId)}\" target=\"_blank\">transaction</a> is being processed. <br />\n        Please hit <span class=\"text-[#f6b855] decoration-dashed cursor-pointer underline hover:decoration-solid underline-offset-4\" on:click={refreshToken}>refresh token</span> once the tx is ready.\n      </p>\n    {/if}\n    \n  {/if}\n</div>\n","<script>\n  import { DEFAULT_SHAPE } from '../../lib/constants'\n  import { connected, signer, contracts } from 'svelte-ethers-store'\n  import { getTxUrl } from '../../lib/contract'\n  import { fetchToken } from '../../lib/api'\n  import { shapes, myShapes, mySlashesIds, isDoingSthImportant } from '../../store'\n  import { get } from 'svelte/store'\n  import Tx from '../Tx.svelte'\n\n  export let tokenId\n\n  let isProcessing = false\n  let approvalTxHash\n  let approvalDone = false\n  let swapTxHash\n  let swapDone = false\n\n  async function handleUpgradableClick() {\n    if (!connected) {\n      throw Error('No account connected.')\n    }\n\n    isProcessing = true\n    isDoingSthImportant.set(true)\n\n    // approve then swap the slash\n    const approvalTx = await $contracts.slashes.connect($signer).approve($contracts.shapes.address, tokenId)\n    approvalTxHash = getTxUrl(approvalTx.hash)\n\n    const { transactionHash: swapTransactionHash } = await approvalTx.wait()\n    approvalTxHash = getTxUrl(swapTransactionHash)\n\n    approvalDone = true\n\n    // then we can actually swap the token\n    const tx = await $contracts.shapes.swapSlash(tokenId, DEFAULT_SHAPE)\n    swapTxHash = getTxUrl(tx.hash)\n\n    // wait until the transaction is mined\n    const { events, transactionHash } = await tx.wait()\n    swapTxHash = getTxUrl(transactionHash)\n\n    // get Transfer event from the tx data\n    // const { args } = events.find(({ event }) => event === 'SwapSlashes')\n    const {\n      args: { tokenId: newTokenId },\n    } = events.find(({ event }) => event === 'Transfer')\n\n    // notify the server to rebuild this\n    const token = await fetchToken(newTokenId)\n\n    // update the shapes\n    shapes.set([...get(shapes), token])\n    myShapes.set([...get(myShapes), token])\n\n    // remove the slash from ui\n    mySlashesIds.set(get(mySlashesIds).filter((d) => d !== tokenId))\n    swapDone = true\n\n    // wait for 3s to fetch image then go to the new shape\n    setTimeout(() => {\n      isDoingSthImportant.set(false)\n      window.location.hash = `congrats-${newTokenId}`\n    }, 3000)\n  }\n</script>\n\n<div class=\"bg-gray-800 p-8 rounded-lg lg:-mx-8 relative overflow-hidden\">\n  <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n\n  <img\n    src=\"./images/bg.png\"\n    alt=\"Background\"\n    class=\"absolute object-cover left-0 top-0 rotate-90 -translate-y-4 opacity-10\"\n  />\n\n  <div class=\"relative\">\n    <h3 class=\"text-center text-xl text-[#F6B855]\">Upgrade this token</h3>\n    <p class=\"text-sm mt-4 leading-relaxed\">\n      You can swap this token to a new $SHAPES token. This token will be burned and you will receive a new token in\n      exchange.\n    </p>\n\n    <p class=\"mt-6 text-[#F6B855] border border-[#F6B855]/50 p-4 rounded-lg text-sm bg-[#F6B855]/10 leading-relaxed\">\n      This new token will have new features: the art will not be the same. The Slashes V1 token that you currently own\n      will be burned.\n    </p>\n\n    {#if isProcessing}\n      <div class=\"mt-10 text-white text-sm leading-relaxed\" role=\"status\">\n        {#if !approvalDone && !approvalTxHash}\n          <p class=\"text-[#F6B855] text-base mb-2 block w-full text-center\">Step 1/4</p>\n\n          <p>Please approve the SLASHES contract to burn your token.</p>\n        {/if}\n\n        {#if !approvalDone && approvalTxHash}\n          <p class=\"text-[#F6B855] text-base mb-2 block w-full text-center\">Step 2/4</p>\n\n          <p>\n            <Tx text=\"Approving the contract…\" txURL={approvalTxHash} />\n          </p>\n        {/if}\n\n        {#if approvalDone && !swapDone && !swapTxHash}\n          <p class=\"text-[#F6B855] text-base mb-2 block w-full text-center\">Step 3/4</p>\n\n          <p>Please confirm that you want to swap the token.</p>\n        {/if}\n\n        {#if approvalDone && !swapDone && swapTxHash}\n          <p class=\"text-[#F6B855] text-base mb-2 block w-full text-center\">Step 4/4</p>\n          <Tx text=\"Swapping the token…\" txURL={swapTxHash} />\n        {/if}\n\n        {#if approvalDone && swapDone}\n          <p class=\"text-[#F6B855] text-center text-lg mb-2\">Upgrade done. Congrats!</p>\n\n          <p>Another 20 seconds to wait while we are fetching your new token...</p>\n          <p>Please refresh this page if you have issues viewing it.</p>\n        {/if}\n      </div>\n    {:else}\n      <p class=\"text-[#F6B855] mt-6 text-sm leading-relaxed\">\n        Upgrading is a four-step process. It will trigger two signed operations in your wallet.\n      </p>\n\n      <button\n        on:click={handleUpgradableClick}\n        class=\"mt-8 mx-auto py-3 w-full gap-2 bg-[#F6B855] text-black rounded-lg flex items-center justify-center hover:brightness-110\"\n      >\n        <svg\n          class=\"flex-none w-5 h-5 stroke-current\"\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.25\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path\n            d=\"M6.00006 8.00023H3.6094C3.47756 8.0002 3.3487 7.96108 3.23909 7.88783C3.12948 7.81457 3.04406 7.71046 2.99361 7.58866C2.94316 7.46686 2.92996 7.33284 2.95567 7.20354C2.98139 7.07424 3.04486 6.95546 3.13806 6.86223L7.52873 2.47156C7.65375 2.34658 7.82329 2.27637 8.00006 2.27637C8.17684 2.27637 8.34638 2.34658 8.4714 2.47156L12.8621 6.86223C12.9553 6.95546 13.0187 7.07424 13.0445 7.20354C13.0702 7.33284 13.057 7.46686 13.0065 7.58866C12.9561 7.71046 12.8706 7.81457 12.761 7.88783C12.6514 7.96108 12.5226 8.0002 12.3907 8.00023H10.0001V12.0002H6.00006V8.00023Z\"\n          />\n          <path d=\"M6 14H10\" />\n        </svg>\n        <span class=\"hidden sm:inline\">Okay, upgrade token</span>\n        <span class=\"sm:hidden inline\">Upgrade token</span>\n      </button>\n    {/if}\n  </div>\n</div>\n","<script>\n  export let tokenId\n  async function handleClick() {\n    window.location.hash = `change-token-${tokenId}`\n  }\n</script>\n\n<button\n  class=\"relative text-black bg-[#f6b855] w-full text-center p-2 flex items-center justify-center gap-2 rounded-lg hover:bg-[#f6b855] transition-colors duration-150 mb-4\"\n  on:click|stopPropagation={handleClick}\n>\n  <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n  <svg\n    class=\"w-6 h-6 stroke-current fill-transparent\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <path d=\"M18 4l3 3l-3 3\" />\n    <path d=\"M18 20l3 -3l-3 -3\" />\n    <path d=\"M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5\" />\n    <path d=\"M21 7h-5a4.978 4.978 0 0 0 -2.998 .998m-4.002 8.003a4.984 4.984 0 0 1 -3 .999h-3\" />\n  </svg>\n\n  Change token\n</button>","<script>\n  import Attributes from './Attributes.svelte'\n  import ShareButtons from './ShareButtons.svelte'\n  import RefreshButton from './RefreshButton.svelte'\n  import Generations from './Generations.svelte'\n  import SwapSlash from './SwapSlash.svelte'\n  import Modal from '../Modal.svelte'\n  import ChangeTokenButton from './ChangeTokenButton.svelte'\n\n  import { getTitle } from '../../lib/helpers'\n  import { currentSeedPNG } from '../../store'\n\n  export let tokenId\n  export let png\n  export let svg\n  export let congrats = false\n  export let upgradable = false\n  export let changeAllowed = false\n  export let attributes = []\n  export let seeds = []\n\n  const [title, shapeName] = getTitle(attributes)\n\n</script>\n\n<Modal>\n  <div class=\"relative z-20 bg-gray-800 aspect-2/3 lg:max-h-full mx-auto lg:mx-0 max-h-[80%] rounded-lg\">\n    <img\n      src={$currentSeedPNG === '' ? png : $currentSeedPNG}\n      class=\"object-cover w-full h-full rounded-lg\"\n      alt=\"Shapes #{tokenId}\"\n    />\n  </div>\n  <div class=\"lg:absolute lg:right-0 lg:top-0 lg:w-[400px] lg:h-[calc(100%-0.5rem)] mt-1\">\n    <div>\n      <div\n        class=\"hidden lg:block absolute left-0 z-10 w-full h-32 -mt-px pointer-events-none -top-1 bg-gradient-to-b from-gray-900\"\n      />\n      <div\n        class=\"hidden lg:block absolute left-0 z-10 w-full h-32 -mt-px pointer-events-none -top-1 bg-gradient-to-b from-gray-900\"\n      />\n      <div\n        class=\"hidden lg:block absolute left-0 z-10 w-full h-32 -mt-px pointer-events-none -bottom-1 bg-gradient-to-t from-gray-900\"\n      />\n      <div\n        class=\"hidden lg:block absolute left-0 z-10 w-full h-32 -mt-px pointer-events-none -bottom-1 bg-gradient-to-t from-gray-900\"\n      />\n\n      <div\n        class=\"lg:absolute lg:top-0 z-0 w-full h-full lg:py-32 pb-12 overflow-auto overscroll-contain transition-all duration-500 lg:-translate-x-1/2 lg:left-1/2 no-scrollbar delay-200\"\n      >\n        {#if congrats}\n          <div class=\" p-8 rounded-lg -mx-8 relative overflow-hidden\">\n            <h2 class=\"text-[#F6B855] text-center text-xl\">\n              Here is your new shape.\n              <br />\n              Congrats!\n            </h2>\n          </div>\n        {/if}\n\n        <div class=\"mt-8 lg:mt-0 lg:w-64 mx-auto max-w-lg w-full\">\n          <div class=\"space-y-2\">\n            <h1 class=\"text-2xl lg:text-3xl text-center\">{title} #{tokenId}</h1>\n            <h2 class=\"flex justify-center items-center gap-2 text-gray-400\">\n              <svg\n                class=\"w-5 h-5 stroke-current\"\n                viewBox=\"0 0 16 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                stroke-width=\"1.25\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              >\n                <path\n                  d=\"M4.33333 6.66667C5.622 6.66667 6.66667 5.622 6.66667 4.33333C6.66667 3.04467 5.622 2 4.33333 2C3.04467 2 2 3.04467 2 4.33333C2 5.622 3.04467 6.66667 4.33333 6.66667Z\"\n                />\n                <path d=\"M1.6665 14.0002H6.99984L4.33317 9.3335L1.6665 14.0002Z\" />\n                <path d=\"M9.3335 2L14.0002 6.66667\" />\n                <path d=\"M9.3335 6.66667L14.0002 2\" />\n                <path d=\"M9.3335 9.3335H14.0002V14.0002H9.3335V9.3335Z\" />\n              </svg>\n              <span class=\"text-lg lg:text-xl first-letter:capitalize\">{shapeName}</span>\n            </h2>\n          </div>\n\n          {#if upgradable}\n            <div class=\"h-px max-w-full mx-auto my-12 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n\n            <SwapSlash {tokenId} />\n          {/if}\n\n          <!-- Twitter etc -->\n          <div class=\"h-px max-w-full mx-auto my-12 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n\n          <div class=\"max-w-sm mx-auto\">\n            {#if changeAllowed}\n              <ChangeTokenButton {tokenId} />\n            {/if}\n\n            <ShareButtons {tokenId} {png} {svg} />\n\n            <!-- TODO: do we want the refresh button for the token owner only? -->\n            <!-- {#if changeAllowed} -->\n            <RefreshButton {tokenId} />\n            <!-- {/if} -->\n\n            {#if seeds.length}\n              <div class=\"h-px max-w-full mx-auto my-8 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n              <Generations {seeds} {tokenId} {changeAllowed} />\n            {/if}\n\n            {#if attributes.length}\n              <div class=\"h-px max-w-full mx-auto my-12 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n              <Attributes {attributes} />\n            {/if}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</Modal>\n","<script>\n  import { myShapes } from '../store'\n  import getSingleToken from '../lib/getSingleToken'\n  import ShowToken from '../components/Shape/ShowToken.svelte'\n\n  // props\n  export let tokenId = 0\n  export let congrats = false\n</script>\n\n{#await getSingleToken(tokenId)}\n  loading...\n{:then {png, svg, attributes, seeds}}\n  {#if svg}\n    <ShowToken\n      {tokenId}\n      png={png}\n      svg={svg}\n      {attributes}\n      {seeds}\n      changeAllowed={$myShapes.map(d => d.tokenId).includes(tokenId)}\n      {congrats}\n    /> \n  {/if}\n{:catch}\n  An error occured while fetching the token...\n{/await}\n\n\n","<script>\n  import { get } from 'svelte/store';\n  import { slashes, mySlashesIds } from '../store'\n  import { getSlashesPNG, getSlashesSVG } from '../lib/api'\n\n  import ShowToken from '../components/Shape/ShowToken.svelte'\n\n  // props\n  export let tokenId = 0\n  let upgradable = true\n  const changeAllowed = false\n  \n  function getSingleToken() {\n    return new Promise((resolve) => {\n      // check if upgradable\n      upgradable = get(mySlashesIds).includes(tokenId)\n\n      // get token\n      const existingSlashIndex = get(slashes).map(({tokenId}) => tokenId).indexOf(tokenId)\n      const token = get(slashes)[existingSlashIndex]\n\n      // images \n      const png = getSlashesPNG(tokenId)\n      const svg = getSlashesSVG(tokenId)\n\n      resolve({...token, png, svg})\n    })\n  }\n</script>\n\n{#await getSingleToken()}\n  loading...\n{:then {png, svg, attributes}}\n  {#if png}\n  <ShowToken\n    {tokenId}\n    {png}\n    {svg}\n    {upgradable}\n    {attributes}\n    {changeAllowed}\n  /> \n  {:else}\n    No token with id {tokenId} found.\n  {/if}\n{:catch}\n  An error occured while fetching the token...\n{/await}\n\n\n","<div class=\"relative z-10 bg-gray-800 aspect-2/3 max-h-full\">\n  <div class=\"w-full h-full flex items-center justify-center\">\n    <div class=\"animate-spin text-gray-400\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"w-6 h-6 stroke-current fill-transparent\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 3a9 9 0 1 0 9 9\" />\n      </svg>\n    </div>\n  </div>\n</div>\n\n<div class=\"p-4 transition-opacity duration-500 opacity-0 pointer-events-none\">\n  <p>Loading…</p>\n  <p class=\"flex items-center gap-1 pt-1 text-sm text-gray-400\">\n    <span class=\"first-letter:capitalize\">Loading…</span>\n  </p>\n</div>","<script>\n  import { getTitle } from '../../lib/helpers'\n  import Loading from './Loading.svelte'\n\n  export let png\n  export let svg\n  export let tokenId\n  export let loading = false\n  export let attributes = []\n  export let upgradable = false\n  export let changeAllowed = false\n\n  const [title, shapeName] = getTitle(attributes)\n\n  function handleClick() {\n    window.location.hash = `${shapeName === 'SlashesV1' ? 'slashes-' : ''}${tokenId}`\n  }\n\n</script>\n\n{#if loading}\n  <Loading />\n{:else}\n  <div class=\"relative z-0 group h-fit\" on:click={handleClick}>\n    <!-- <div class=\"absolute w-full h-full placeholder\" /> -->\n    <div\n      class=\"bg-gray-900 border rounded-lg border-white/10 text-gray-50 max-w-[calc(100vw-32px)] no-scrollbar overflow-hidden transition-all duration-200 cursor-pointer group-hover:scale-105 hover:bg-gray-800\"\n    >\n      <div class=\"relative z-20 bg-gray-800 aspect-2/3 lg:max-h-full mx-auto lg:mx-0 max-h-[80%]\">\n        <img src={png} class=\"object-cover w-full h-full\" alt=\"Slashes #{tokenId}\" />\n      </div>\n      <div class=\"p-4 pointer-events-none\">\n        <p>{title} #{tokenId}</p>\n        <p class=\"flex items-center gap-1 pt-1 text-sm text-gray-400\">\n          <svg\n            class=\"w-4 h-4 stroke-current pt-0.5\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            stroke-width=\"1.25\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path\n              d=\"M4.33333 6.66667C5.622 6.66667 6.66667 5.622 6.66667 4.33333C6.66667 3.04467 5.622 2 4.33333 2C3.04467 2 2 3.04467 2 4.33333C2 5.622 3.04467 6.66667 4.33333 6.66667Z\"\n            />\n            <path d=\"M1.6665 14.0002H6.99984L4.33317 9.3335L1.6665 14.0002Z\" />\n            <path d=\"M9.3335 2L14.0002 6.66667\" />\n            <path d=\"M9.3335 6.66667L14.0002 2\" />\n            <path d=\"M9.3335 9.3335H14.0002V14.0002H9.3335V9.3335Z\" />\n          </svg>\n\n          <span class=\"first-letter:capitalize\">{shapeName ? shapeName : 'Slashes V1'}</span>\n        </p>\n        {#if changeAllowed}\n          <button\n            class=\"mt-4 w-full gap-1 bg-[#F6B855] text-black rounded flex items-center justify-center p-2 text-sm hover:brightness-110\"\n          >\n            <svg\n              class=\"flex-none w-4 h-4 stroke-current\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              stroke-width=\"1.25\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path\n                d=\"M6.00006 8.00023H3.6094C3.47756 8.0002 3.3487 7.96108 3.23909 7.88783C3.12948 7.81457 3.04406 7.71046 2.99361 7.58866C2.94316 7.46686 2.92996 7.33284 2.95567 7.20354C2.98139 7.07424 3.04486 6.95546 3.13806 6.86223L7.52873 2.47156C7.65375 2.34658 7.82329 2.27637 8.00006 2.27637C8.17684 2.27637 8.34638 2.34658 8.4714 2.47156L12.8621 6.86223C12.9553 6.95546 13.0187 7.07424 13.0445 7.20354C13.0702 7.33284 13.057 7.46686 13.0065 7.58866C12.9561 7.71046 12.8706 7.81457 12.761 7.88783C12.6514 7.96108 12.5226 8.0002 12.3907 8.00023H10.0001V12.0002H6.00006V8.00023Z\"\n              />\n              <path d=\"M6 14H10\" />\n            </svg>\n            Seed / Shape\n          </button>\n        {/if}\n        {#if upgradable}\n          <button\n            class=\"mt-4 w-full gap-1 bg-[#F6B855] text-black rounded flex items-center justify-center p-2 text-sm hover:brightness-110 transition-all duration-150\"\n          >\n            <svg\n              class=\"flex-none w-4 h-4 stroke-current\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              stroke-width=\"1.25\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path\n                d=\"M6.00006 8.00023H3.6094C3.47756 8.0002 3.3487 7.96108 3.23909 7.88783C3.12948 7.81457 3.04406 7.71046 2.99361 7.58866C2.94316 7.46686 2.92996 7.33284 2.95567 7.20354C2.98139 7.07424 3.04486 6.95546 3.13806 6.86223L7.52873 2.47156C7.65375 2.34658 7.82329 2.27637 8.00006 2.27637C8.17684 2.27637 8.34638 2.34658 8.4714 2.47156L12.8621 6.86223C12.9553 6.95546 13.0187 7.07424 13.0445 7.20354C13.0702 7.33284 13.057 7.46686 13.0065 7.58866C12.9561 7.71046 12.8706 7.81457 12.761 7.88783C12.6514 7.96108 12.5226 8.0002 12.3907 8.00023H10.0001V12.0002H6.00006V8.00023Z\"\n              />\n              <path d=\"M6 14H10\" />\n            </svg>\n            <span class=\"hidden sm:inline\">Upgrade token</span>\n            <span class=\"sm:hidden inline\">Upgrade</span>\n          </button>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n  import { signerAddress } from 'svelte-ethers-store'\n  import { myShapes } from '../store'\n  import { fetchShapesByIds } from '../lib/api'\n  import Thumbnail from '../components/Shape/Thumbnail.svelte'\n\n  export let shapesContract\n\n  let balance = 0\n  // let tokens = []\n  onMount(async function () {\n    const balanceOf = await shapesContract.balanceOf($signerAddress)\n    balance = balanceOf.toNumber()\n    if (balance) {\n      const tokenIds = await Promise.all(\n        Array(balance)\n          .fill(0)\n          .map((_, i) => shapesContract.tokenOfOwnerByIndex($signerAddress, i))\n      )\n      const tokens = await fetchShapesByIds(tokenIds.map(d => d.toNumber()))\n      myShapes.set(tokens)\n    }\n  })\n</script>\n{#if $myShapes.length}\n<div class=\"h-0.5 mx-auto mt-16 md:mt-24 max-w-full mb-12 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n\n<h3 class=\"text-lg font-semibold text-gray-50\">My Shapes ({$myShapes.length})</h3>\n\n<p class=\"max-w-xl mt-2 text-sm leading-relaxed text-gray-400\">These are the $SHAPES tokens you own.</p>\n\n<section class=\"grid grid-cols-2 gap-4 mt-8 sm:gap-6 md:gap-8 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-6 p-3 -mx-3\">\n  {#each $myShapes as { tokenId, png, svg, attributes, loading }}\n    <div>\n      <Thumbnail {tokenId} {svg} {png} {attributes} />\n    </div>\n  {/each}\n</section>\n{/if}","<script>\n  import { filterShapeType, shapes } from '../store'\n  import { fetchShapes } from '../lib/api'\n  import { SHAPE_NAMES } from '../lib/constants'\n  \n  export let count\n  let search\n  let selected\n\n  const availableShapes = SHAPE_NAMES.filter(({ released }) => released)\n  \n  function handleSearchChange() {\n    // not valid token\n    if(\n      isNaN(parseInt(search))\n      ||\n      parseInt(search) > count\n    ) return\n    window.location.hash = `${search}`\n  }\n\n  async function handleFilterChange() {\n    filterShapeType.set(selected)\n    const newShapes = await fetchShapes(undefined, undefined, selected === 'all' ? '' : selected)\n    shapes.set([...newShapes])\n  }\n</script>\n\n<div class=\"h-0.5 mx-auto mt-16 md:mt-24 max-w-full mb-12 w-96 bg-gradient-to-r from-transparent via-white/20\" />\n<div class=\"items-center justify-between md:flex scroll-m-8\" id=\"gallery\">\n  <h3 class=\"mb-4 text-lg font-semibold text-gray-50 md:mb-0\">\n    All Shapes ({$shapes.length}/{count})\n  </h3>\n  <div class=\"max-w-full gap-4 w-fit sm:w-auto sm:flex sm:gap-6\">\n    <div class=\"relative inline-flex items-center w-full gap-1 px-2 mb-2 bg-gray-600 rounded-lg sm:mb-0 sm:w-auto\">\n      <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n\n      <svg\n        class=\"flex-none w-6 h-6 stroke-current\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path\n          d=\"M10 17C13.866 17 17 13.866 17 10C17 6.13401 13.866 3 10 3C6.13401 3 3 6.13401 3 10C3 13.866 6.13401 17 10 17Z\"\n        />\n        <path d=\"M21 21L15 15\" />\n      </svg>\n\n      <input\n        type=\"text\"\n        placeholder=\"Search by ID…\"\n        class=\"p-2 bg-transparent outline-none\"\n        bind:value={search}\n        on:change={handleSearchChange}\n      />\n    </div>\n\n    <div class=\"relative flex items-baseline max-w-full pr-2 bg-gray-600 rounded-lg\">\n      <div class=\"absolute inset-0 w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n      <span class=\"absolute top-0 flex items-center h-full gap-2 left-3\">\n        <svg\n          class=\"w-6 h-6 stroke-current\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path\n            d=\"M6 12C7.10457 12 8 11.1046 8 10C8 8.89543 7.10457 8 6 8C4.89543 8 4 8.89543 4 10C4 11.1046 4.89543 12 6 12Z\"\n          />\n          <path d=\"M6 4V8\" />\n          <path d=\"M6 12V20\" />\n          <path\n            d=\"M12 18C13.1046 18 14 17.1046 14 16C14 14.8954 13.1046 14 12 14C10.8954 14 10 14.8954 10 16C10 17.1046 10.8954 18 12 18Z\"\n          />\n          <path d=\"M12 4V14\" />\n          <path d=\"M12 18V20\" />\n          <path\n            d=\"M18 9C19.1046 9 20 8.10457 20 7C20 5.89543 19.1046 5 18 5C16.8954 5 16 5.89543 16 7C16 8.10457 16.8954 9 18 9Z\"\n          />\n          <path d=\"M18 4V5\" />\n          <path d=\"M18 9V20\" />\n        </svg>\n        <span class=\"hidden sm:block\">Shape:</span>\n      </span>\n\n      <select\n        name=\"shape\"\n        id=\"shape\"\n        class=\"relative w-full h-full py-2 pr-3 pl-10 sm:pl-[6.5rem] bg-transparent outline-none\"\n        bind:value={selected}\n        on:change={handleFilterChange}\n      >\n        <option value=\"all\" selected>All</option>\n        {#each availableShapes as { name, id }}\n          <option value={id}>{name}</option>\n        {/each}\n      </select>\n    </div>\n  </div>\n</div>\n","<script>\n  import { onMount } from 'svelte'\n  import { SHAPES_PER_PAGE } from '../lib/constants'\n  import Search from '../components/Search.svelte'\n  import Thumbnail from '../components/Shape/Thumbnail.svelte'\n  import { fetchShapes, fetchCount } from '../lib/api'\n  import { shapes, filteredShapes, filterShapeType } from '../store'\n\n  let backdrop = false\n\n  // default values\n  let loading = false\n  let offset = 0\n  let limit = SHAPES_PER_PAGE\n\n  async function handleClickLoadMore() {\n    offset = $shapes.length\n    limit = offset + SHAPES_PER_PAGE\n    const newShapes = await fetchShapes(limit, offset, $filterShapeType)\n    shapes.set([...$shapes, ...newShapes])\n  }\n\n  let totalSupply\n  onMount(async () => {\n    totalSupply = await fetchCount()\n  })\n</script>\n\n<Search count={totalSupply} />\n\n<div\n  class=\"z-50 fixed top-8 sm:top-16 right-8 transition-opacity lg:hidden w-12 h-12 flex items-center justify-center bg-gray-800 text-gray-200 hover:text-white border-gray-700 rounded-lg shadow border duration-300 hover:bg-gray-700 cursor-pointer {backdrop\n    ? 'delay-500'\n    : 'opacity-0 pointer-events-none'}\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"w-6 h-6 fill-transparent stroke-current\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n  </svg>\n</div>\n\n<section\n  class=\"grid grid-cols-2 gap-4 mt-8 sm:gap-6 md:gap-8 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-6 p-3 -mx-3 {backdrop\n    ? ''\n    : 'overflow-hidden'}\"\n>\n  {#each $filteredShapes as { tokenId, svg, png, attributes }}\n    <Thumbnail {tokenId} {svg} {png} {attributes}/>\n  {/each}\n</section>\n\n{#if $filteredShapes.length >= limit}\n  <div class=\"flex justify-center\">\n    <button\n      type=\"button\"\n      class=\"relative py-4 px-12 mt-24 text-sm font-medium text-gray-200 hover:text-white hover:text-gray rounded-lg border border-white/10 bg-white/10 hover:bg-white/15 inline-flex items-center transition-colors duration-150\"\n      on:click={handleClickLoadMore}\n    >\n      <div class=\"absolute inset-0 -top-px w-full h-px bg-gradient-to-r from-transparent via-white/20\" />\n      {#if loading}\n        <svg\n          role=\"status\"\n          viewBox=\"0 0 100 101\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"inline w-4 h-4 mr-2 text-gray-200 animate-spin dark:text-gray-600\"\n        >\n          <path\n            d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n            fill=\"#1C64F2\"\n          />\n        </svg>\n      {/if}\n      Load more\n    </button>\n  </div>\n{/if}\n","<script>\n  import { onMount } from 'svelte'\n\n  // components\n  import Header from './components/Header.svelte'\n  import Footer from './components/Footer.svelte'\n  import ConnectWallet from './components/ConnectWallet.svelte'\n  import InfoBubbles from './components/InfoBubbles.svelte'\n  import Message from './components/Message.svelte'\n  import Prompt from './components/Prompt.svelte'\n\n  // mint and swap\n  import PickShape from './components/PickShape.svelte'\n\n  // show single tokens\n  import SingleShape from './layouts/SingleShape.svelte'\n  import SingleSlash from './layouts/SingleSlash.svelte'\n\n  // advanced components\n  // import MySlashes from './layouts/MySlashes.svelte'\n  import MyShapes from './layouts/MyShapes.svelte'\n  import AllShapes from './layouts/AllShapes.svelte'\n\n  import { contracts } from 'svelte-ethers-store'\n  import { shownTokenId, pickShape, filterShapeType, shapes } from './store'\n  \n  import { fetchShapes } from './lib/api'\n  import { DEFAULT_UI_SHAPE } from './lib/constants'\n\n  // contracts\n  let shapesContract\n  let slashesContract\n  contracts.subscribe(({ shapes, slashes }) => {\n    shapesContract = shapes\n    slashesContract = slashes\n  })\n\n  // router\n  let isSlashes\n  let isCongrats\n  let isMint\n  let isChangeToken\n  function handleHashChange() {\n    const hash = window.location.hash\n\n    // #mint\n    isMint = hash.includes('mint')\n    if (isMint) {\n      shownTokenId.set([0, false])\n      return pickShape.set([0, true])\n    }\n\n    // prefixes\n    isSlashes = hash.includes('slashes')\n    isCongrats = hash.includes('congrats')\n    isChangeToken = hash.includes('change-token')\n    const tokenId = parseInt(\n      hash.slice(\n        // remove prefix if specified\n        isSlashes\n          ? 1 + 'slashes-'.length\n          : isCongrats\n          ? 1 + 'congrats-'.length\n          : isChangeToken\n          ? 1 + 'change-token-'.length\n          : 1\n      )\n    )\n\n    if (isChangeToken) {\n      shownTokenId.set([0, false])\n      return pickShape.set([tokenId, true])\n    }\n    if (!isNaN(tokenId)) {\n      pickShape.set([0, false])\n      return shownTokenId.set([tokenId, isSlashes])\n    }\n  }\n\n  // fired when url hash changes\n  let isLoaded = false\n  onMount(() => {\n    handleHashChange()\n    setTimeout(() => {\n      isLoaded = true\n    }, 0)\n  })\n\n  // pick the correct token type\n  export const defaultShapeType = DEFAULT_UI_SHAPE\n\n  // set filter \n  async function handleClickFilter(selectedType) {\n    filterShapeType.set(selectedType)\n    const newShapes = await fetchShapes(undefined, undefined, selectedType === 'all' ? '' : selectedType)\n    await shapes.set([...newShapes])\n    const anchor = document.getElementById('gallery')\n    window.scrollTo({\n\t\t\ttop: anchor.offsetTop,\n\t\t\tbehavior: 'smooth'\n\t\t})\n  }\n\n  // deadline to swap slashes\n  // Tue Jan 31 2023 23:59:59 GMT+0100\n  export let swapDeadline = 1675205999000\n\n  // Find the distance between now and the count down date\n  const timeToSwapDeadline = (\n    new Date(swapDeadline).getTime() - new Date().getTime()\n  ) / 1000\n</script>\n\n<svelte:window on:hashchange={handleHashChange} />\n\n<div class=\"px-4 bg-gray-900 pt-32 xl:pt-40 sm:px-6 md:px-8\">\n  <div class=\"transition-opacity duration-1000 delay-500 {isLoaded ? '' : 'opacity-0'}\">\n    <div class=\"fixed w-full top-0 right-0 p-2 md:translate-x-0 md:p-8 z-20 text-right pointer-events-none\">\n      <div class=\"flex flex-col gap-2 md:gap-4 items-center md:items-end\">\n        <ConnectWallet />\n        <Message />\n      </div>\n    </div>\n\n    <div class=\"max-w-4xl mx-auto xl:max-w-7xl text-gray-50\">\n      <img src=\"./images/bg.png\" alt=\"Background\" class=\"absolute top-0 w-auto -translate-x-1/2 left-1/2\" />\n\n      <div class=\"relative\">\n        <!-- Show a single token -->\n        {#if $shownTokenId[0] !== 0}\n          {#if $shownTokenId[1] === true}\n            <SingleSlash tokenId={$shownTokenId[0]} />\n          {:else}\n            <SingleShape tokenId={$shownTokenId[0]} congrats={isCongrats} />\n          {/if}\n        {/if}\n\n        <!-- Show modal to pick a shape  -->\n        {#if $pickShape[1]}\n          <PickShape tokenId={$pickShape[0]} {shapesContract} />\n        {/if}\n\n        <Header shapeType={defaultShapeType} {shapesContract} />\n\n        <InfoBubbles />\n\n        \n        {#if timeToSwapDeadline > 0}\n          <Prompt {isLoaded} deadline={swapDeadline} />\n        {/if}\n\n        <section class=\"text-center my-24 md:my-32 lg:my-40 relative\">\n          <div\n            class=\"absolute w-2/3 h-64 opacity-[.15] bg-white left-1/2 top-32 -translate-x-1/2 rounded-[100%] blur-[200px]\"\n          />\n\n          <div class=\"relative\">\n            <h2 class=\"text-2xl md:text-3xl lg:text-4xl drop-shadow-[0_8px_16px_rgba(0,0,0,0.25)]\">\n              Explore the collections\n            </h2>\n            <!-- <h3 class=\"text-lg md:text-xl lg:text-2xl mt-6 text-gray-400\">4 different generators with unique traits.</h3> -->\n          </div>\n\n          <div\n            class=\"relative grid md:grid-cols-2 gap-4 md:gap-6 xl:gap-8 mt-12 md:mt-16 lg:mt-20 max-w-md mx-auto md:max-w-none\"\n          >\n            <div\n              class=\"bg-gray-800 py-16 xl:py-28 px-8 rounded-xl relative overflow-hidden group cursor-pointer shadow-xl\"\n              on:click={() => handleClickFilter('SlashesV2')}\n            >\n              <img\n                src=\"./images/collection-slashes.png\"\n                alt=\"Slashes\"\n                class=\"absolute inset-0 object-cover w-full h-full\"\n              />\n\n              <div class=\"relative\">\n                <h4\n                  class=\"text-2xl sm:text-3xl xl:text-5xl drop-shadow-[0_8px_16px_rgba(0,0,0,0.5)] uppercase tracking-[.5em] font-bold flex gap-4 justify-center mb-8\"\n                >\n                  <span>Slashe<span class=\"tracking-normal\">s</span></span><span class=\"text-lg tracking-widest\"\n                    >V2</span\n                  >\n                </h4>\n\n                <p\n                  class=\"absolute left-1/2 -translate-x-1/2 opacity-0 -mt-4 xl:mt-0 translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition duration-300 ease-in-out bg-white py-3 px-6 text-gray-800 inline-flex gap-2 rounded-md shadow-xl whitespace-nowrap\"\n                >\n                  <svg\n                    class=\"flex-none w-6 h-6 stroke-current\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    stroke-width=\"1.5\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" />\n                    <path d=\"M2.5 21h8l-4 -7z\" />\n                    <path d=\"M14 3l7 7\" />\n                    <path d=\"M14 10l7 -7\" />\n                    <path d=\"M14 14h7v7h-7z\" />\n                  </svg>\n\n                  Show Slashes token\n                </p>\n              </div>\n            </div>\n\n            <div\n              class=\"bg-gray-800 py-16 xl:py-28 px-8 rounded-xl relative overflow-hidden group cursor-pointer shadow-xl\"\n              on:click={() => handleClickFilter('Arcs')}\n            >\n              <img src=\"./images/collection-arcs.png\" alt=\"Arcs\" class=\"absolute inset-0 object-cover w-full h-full\" />\n\n              <div class=\"relative\">\n                <h4\n                  class=\"text-2xl sm:text-3xl xl:text-5xl drop-shadow-[0_8px_16px_rgba(0,0,0,0.5)] uppercase tracking-[.5em] font-bold mb-8\"\n                >\n                  Arc<span class=\"tracking-normal\">s</span>\n                </h4>\n\n                <p\n                  class=\"absolute left-1/2 -translate-x-1/2 opacity-0 -mt-4 xl:mt-0 translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition duration-300 ease-in-out bg-white py-3 px-6 text-gray-800 inline-flex gap-2 rounded-md shadow-xl whitespace-nowrap\"\n                >\n                  <svg\n                    class=\"flex-none w-6 h-6 stroke-current\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    stroke-width=\"1.5\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" />\n                    <path d=\"M2.5 21h8l-4 -7z\" />\n                    <path d=\"M14 3l7 7\" />\n                    <path d=\"M14 10l7 -7\" />\n                    <path d=\"M14 14h7v7h-7z\" />\n                  </svg>\n\n                  Show Arcs token\n                </p>\n              </div>\n            </div>\n\n            <div\n              class=\"bg-gray-800 py-16 xl:py-28 px-8 rounded-xl relative overflow-hidden group cursor-pointer shadow-xl\"\n              on:click={() => handleClickFilter('Grids')}\n            >\n              <img\n                src=\"./images/collection-grids.png\"\n                alt=\"Grids\"\n                class=\"absolute inset-0 object-cover w-full h-full\"\n              />\n\n              <div class=\"relative\">\n                <h4\n                  class=\"text-2xl sm:text-3xl xl:text-5xl drop-shadow-[0_8px_16px_rgba(0,0,0,0.5)] uppercase tracking-[.5em] font-bold mb-8\"\n                >\n                  Grid<span class=\"tracking-normal\">s</span>\n                </h4>\n\n                <p\n                  class=\"absolute left-1/2 -translate-x-1/2 opacity-0 -mt-4 xl:mt-0 translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition duration-300 ease-in-out bg-white py-3 px-6 text-gray-800 inline-flex gap-2 rounded-md shadow-xl whitespace-nowrap\"\n                >\n                  <svg\n                    class=\"flex-none w-6 h-6 stroke-current\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    stroke-width=\"1.5\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" />\n                    <path d=\"M2.5 21h8l-4 -7z\" />\n                    <path d=\"M14 3l7 7\" />\n                    <path d=\"M14 10l7 -7\" />\n                    <path d=\"M14 14h7v7h-7z\" />\n                  </svg>\n\n                  Show Grids token\n                </p>\n              </div>\n            </div>\n\n            <div\n              class=\"bg-gray-800 py-16 xl:py-28 px-8 rounded-xl relative overflow-hidden group cursor-pointer shadow-xl\"\n              on:click={() => { handleClickFilter('Stencils') }} \n            >\n              <img\n                src=\"./images/collection-stencils.png\"\n                alt=\"Stencils\"\n                class=\"absolute inset-0 object-cover w-full h-full\"\n              />\n\n              <div class=\"relative\">\n                <h4\n                  class=\"text-2xl sm:text-3xl xl:text-5xl drop-shadow-[0_8px_16px_rgba(0,0,0,0.5)] uppercase tracking-[.5em] font-bold mb-8\"\n                >\n                  Stencil<span class=\"tracking-normal\">s</span>\n                </h4>\n\n                <p\n                  class=\"absolute left-1/2 -translate-x-1/2 opacity-0 -mt-4 xl:mt-0 translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition duration-300 ease-in-out bg-white py-3 px-6 text-gray-800 inline-flex gap-2 rounded-md shadow-xl whitespace-nowrap\"\n                >\n                  <svg\n                    class=\"flex-none w-6 h-6 stroke-current\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    stroke-width=\"1.5\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  >\n                    <circle cx=\"6.5\" cy=\"6.5\" r=\"3.5\" />\n                    <path d=\"M2.5 21h8l-4 -7z\" />\n                    <path d=\"M14 3l7 7\" />\n                    <path d=\"M14 10l7 -7\" />\n                    <path d=\"M14 14h7v7h-7z\" />\n                  </svg>\n\n                  Show Stencils token\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <!-- {#if slashesContract && shapesContract}\n          <MySlashes {slashesContract} />\n        {/if} -->\n\n        {#if shapesContract}\n          <MyShapes {shapesContract} />\n        {/if}\n\n        <!-- Show all shapes from API -->\n        <AllShapes />\n      </div>\n    </div>\n  </div>\n</div>\n<Footer />\n","import './app.css'\nimport App from './App.svelte'\n\nconst app = new App({\n  target: document.getElementById('app'),\n})\n\nexport default app\n"],"names":["Buffer","ethers.providers.Web3Provider","create_if_block","get","create_if_block_5","create_if_block_4","create_if_block_2","create_if_block_1","create_if_block_3","availableShapes"],"mappings":"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"}